// Generated by view binder compiler. Do not edit!
package com.opensw.mainscreen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.opensw.mainscreen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFindPasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBackFromFindPassword;

  @NonNull
  public final Button btnFindPasswordCodeConfirm;

  @NonNull
  public final Button btnFindPasswordSendCode;

  @NonNull
  public final EditText editFindPasswordCode;

  @NonNull
  public final EditText editFindPasswordEmail;

  @NonNull
  public final EditText editFindPasswordId;

  @NonNull
  public final TextView textFindPassword;

  @NonNull
  public final TextView textFindPasswordShow;

  private FragmentFindPasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnBackFromFindPassword, @NonNull Button btnFindPasswordCodeConfirm,
      @NonNull Button btnFindPasswordSendCode, @NonNull EditText editFindPasswordCode,
      @NonNull EditText editFindPasswordEmail, @NonNull EditText editFindPasswordId,
      @NonNull TextView textFindPassword, @NonNull TextView textFindPasswordShow) {
    this.rootView = rootView;
    this.btnBackFromFindPassword = btnBackFromFindPassword;
    this.btnFindPasswordCodeConfirm = btnFindPasswordCodeConfirm;
    this.btnFindPasswordSendCode = btnFindPasswordSendCode;
    this.editFindPasswordCode = editFindPasswordCode;
    this.editFindPasswordEmail = editFindPasswordEmail;
    this.editFindPasswordId = editFindPasswordId;
    this.textFindPassword = textFindPassword;
    this.textFindPasswordShow = textFindPasswordShow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFindPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFindPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_find_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFindPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackFromFindPassword;
      Button btnBackFromFindPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnBackFromFindPassword == null) {
        break missingId;
      }

      id = R.id.btnFindPasswordCodeConfirm;
      Button btnFindPasswordCodeConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnFindPasswordCodeConfirm == null) {
        break missingId;
      }

      id = R.id.btnFindPasswordSendCode;
      Button btnFindPasswordSendCode = ViewBindings.findChildViewById(rootView, id);
      if (btnFindPasswordSendCode == null) {
        break missingId;
      }

      id = R.id.editFindPasswordCode;
      EditText editFindPasswordCode = ViewBindings.findChildViewById(rootView, id);
      if (editFindPasswordCode == null) {
        break missingId;
      }

      id = R.id.editFindPasswordEmail;
      EditText editFindPasswordEmail = ViewBindings.findChildViewById(rootView, id);
      if (editFindPasswordEmail == null) {
        break missingId;
      }

      id = R.id.editFindPasswordId;
      EditText editFindPasswordId = ViewBindings.findChildViewById(rootView, id);
      if (editFindPasswordId == null) {
        break missingId;
      }

      id = R.id.textFindPassword;
      TextView textFindPassword = ViewBindings.findChildViewById(rootView, id);
      if (textFindPassword == null) {
        break missingId;
      }

      id = R.id.textFindPasswordShow;
      TextView textFindPasswordShow = ViewBindings.findChildViewById(rootView, id);
      if (textFindPasswordShow == null) {
        break missingId;
      }

      return new FragmentFindPasswordBinding((ConstraintLayout) rootView, btnBackFromFindPassword,
          btnFindPasswordCodeConfirm, btnFindPasswordSendCode, editFindPasswordCode,
          editFindPasswordEmail, editFindPasswordId, textFindPassword, textFindPasswordShow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
