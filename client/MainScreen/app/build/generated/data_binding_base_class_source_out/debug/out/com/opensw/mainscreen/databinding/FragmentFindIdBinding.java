// Generated by view binder compiler. Do not edit!
package com.opensw.mainscreen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.opensw.mainscreen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFindIdBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBackFromFindId;

  @NonNull
  public final Button btnFindIdCodeConfirm;

  @NonNull
  public final Button btnFindIdSendCode;

  @NonNull
  public final EditText editFindIdCode;

  @NonNull
  public final EditText editFindIdEmail;

  @NonNull
  public final TextView textFindId;

  @NonNull
  public final TextView textFindIdShow;

  private FragmentFindIdBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnBackFromFindId, @NonNull Button btnFindIdCodeConfirm,
      @NonNull Button btnFindIdSendCode, @NonNull EditText editFindIdCode,
      @NonNull EditText editFindIdEmail, @NonNull TextView textFindId,
      @NonNull TextView textFindIdShow) {
    this.rootView = rootView;
    this.btnBackFromFindId = btnBackFromFindId;
    this.btnFindIdCodeConfirm = btnFindIdCodeConfirm;
    this.btnFindIdSendCode = btnFindIdSendCode;
    this.editFindIdCode = editFindIdCode;
    this.editFindIdEmail = editFindIdEmail;
    this.textFindId = textFindId;
    this.textFindIdShow = textFindIdShow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFindIdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFindIdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_find_id, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFindIdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackFromFindId;
      Button btnBackFromFindId = ViewBindings.findChildViewById(rootView, id);
      if (btnBackFromFindId == null) {
        break missingId;
      }

      id = R.id.btnFindIdCodeConfirm;
      Button btnFindIdCodeConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnFindIdCodeConfirm == null) {
        break missingId;
      }

      id = R.id.btnFindIdSendCode;
      Button btnFindIdSendCode = ViewBindings.findChildViewById(rootView, id);
      if (btnFindIdSendCode == null) {
        break missingId;
      }

      id = R.id.editFindIdCode;
      EditText editFindIdCode = ViewBindings.findChildViewById(rootView, id);
      if (editFindIdCode == null) {
        break missingId;
      }

      id = R.id.editFindIdEmail;
      EditText editFindIdEmail = ViewBindings.findChildViewById(rootView, id);
      if (editFindIdEmail == null) {
        break missingId;
      }

      id = R.id.textFindId;
      TextView textFindId = ViewBindings.findChildViewById(rootView, id);
      if (textFindId == null) {
        break missingId;
      }

      id = R.id.textFindIdShow;
      TextView textFindIdShow = ViewBindings.findChildViewById(rootView, id);
      if (textFindIdShow == null) {
        break missingId;
      }

      return new FragmentFindIdBinding((ConstraintLayout) rootView, btnBackFromFindId,
          btnFindIdCodeConfirm, btnFindIdSendCode, editFindIdCode, editFindIdEmail, textFindId,
          textFindIdShow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
